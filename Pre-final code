#include <DHT.h>
#include <NewPing.h>

#define DHTPIN 12
#define DHTTYPE DHT11   // DHT 11 sensor

#define TRIGGER_PIN_IN 6
#define ECHO_PIN_IN 7
#define MAX_DISTANCE_IN 200

#define TRIGGER_PIN_OUT 8
#define ECHO_PIN_OUT 9
#define MAX_DISTANCE_OUT 200

NewPing sonar_in(TRIGGER_PIN_IN, ECHO_PIN_IN, MAX_DISTANCE_IN);
NewPing sonar_out(TRIGGER_PIN_OUT, ECHO_PIN_OUT, MAX_DISTANCE_OUT);
DHT dht(DHTPIN, DHTTYPE);


int count=0;

const int buttonPin = 2;     // the number of the pushbutton pin and it  Works as a resetter of the counter, will be put in the door's lock
const int ledPin =  13;      // the number of the LED pin 

void IN()
{
    if(digitalRead(buttonPin) == LOW) //funcitons based off of button pulling input pin LOW
  {
        digitalWrite(ledPin, HIGH);
  }
  else {
      count++;
      Serial.print("Person In Room:");
      Serial.print(" \t");
      Serial.println(count);
      if ( count < 0 ) {
      count = 0;
      }
  }
  delay(500);
}

void OUT()
{
  if(digitalRead(buttonPin) == LOW) //funcitons based off of button pulling input pin LOW
  {
        digitalWrite(ledPin, HIGH);
  }
  else {
    count--;
    Serial.print("Person In Room:");
    Serial.print(" \t");
    Serial.println(count);
    Serial.print('\n'); 
    if ( count < 0 ) {
      count = 0;
      }
  }
  delay(500);
}
  
void setup()
{
  pinMode(buttonPin, INPUT); // work as a resetter
  pinMode(ledPin, OUTPUT);
  Serial.begin(115200);
  Serial.println("Number Of People Counter - Measurements Campaign Project_IDP");
  Serial.print('\n'); 
  Serial.print('\n'); 
  Serial.print('\n'); 
  delay(1000);
  
  if(digitalRead(buttonPin) == LOW) //funcitons based off of button pulling input pin LOW
  {
        digitalWrite(ledPin, HIGH);
  }
  else {
    Serial.print("Person In Room:");
    Serial.println(count);
    if ( count < 0 ) {
      count = 0;
    }
    Serial.print('\n'); 
  }
}

void loop () {
  inout ();
  temphumidity();
}

void inout()
{  
  unsigned int uS1 = sonar_in.ping();
  int distance1 = uS1 / US_ROUNDTRIP_CM;
  if(distance1 != 0 && distance1 <=13){
    IN();
  }
  delay(500);
  unsigned int uS2 = sonar_out.ping();
  int distance2 = uS2 / US_ROUNDTRIP_CM;
  if(distance2 != 0 && distance2 <=13){
    OUT();
  }
}

void temphumidity () { 
    if(digitalRead(buttonPin) == LOW) //funcitons based off of button pulling input pin LOW
  {
        digitalWrite(ledPin, HIGH);
  }
     else {
  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(t);
  Serial.print(" *C ");
  Serial.print('\n'); 
  delay (500);
  }
}
